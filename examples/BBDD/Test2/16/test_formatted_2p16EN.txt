?: The metadata stored in the data dictionary of a DBMS  
a. are generated by normal users when running application programs  
$b. contains information describing the conceptual schema of the database  
c. are the result of the compilation of programs with embedded data management language sentences  
d. are the initial tuples with which every relation in the database is initialized  
e. None of the others is right  

?: Given a relational schema R, and a decomposition of R into R1 and R2  
a. It can never be a lossless join decomposition of R  
b. r1 |x| r2 (natural join) has LESS tuples than the original r  
c. r1 x r2 (cartesian join) has MORE tuples than the original r  
$d. r1 |x| r2 (natural join) has MORE tuples than the original r  
e. None of the others is right  

?: Given a referential integrity with a referenced relation r1 and primary key K  
a. r1 and r2 must have the same number of attributes  
b. Πx(r1) ⊆ Πx(r2) must always be true  
c. K and α can have a different number of attributes  
d. r1 can not have a forcing key  
$e. None of the others is right  

?: Given the relational schema R = { A, B, C, D, E }  
a. { A, B } is a superkey  
$b. { A, B, C, D, E } is a superkey  
c. There can never be a candidate key  
d. { A } could never be a primary key  
e. None of the others is right  

?: A relation that is in 3NF  
a. If it is also in BCNF, then it can not have more than one foreign key  
b. Can have more than one primary key  
c. Can NOT have more than one candidate key  
d. If it is also NOT in BCNF, then it can not have more than one foreign key  
$e. None of the others is right  

?: The exclusion constraint ⊕ in the E-R model  
a. Means that the "upper level" entities can not have relationships to the "lower level" entities  
b. Is established between several "strong" and "weak" relationship sets  
c. Is not actually part of the ER model  
$d. Can be used together with the maximum cardinality constraint  
e. None of the others is right  

?: Given R = (A, B, C, D, E) and F = { AB → DE, E → B }  
a. R's highest normal form is BCNF  
$b. R is not in BCNF nor in 3NF  
c. R's highest normal form is 3NF  
d. The normal form can not be known until a canonical cover of F is computed  
e. None of the others is right  

?: Given the following Entity-Relationship diagram, in the usual mapping into tables mechanisms, a valid mapping is (x attribute is NOT part of the key for R): 
[image8.png]
a. A(_a1_,a2) B(_b1_,b2) C(_c1_,c2) R(a1,b1,c1,x) R keys: b1+c1, a1+c1  
b. A(_a1_,a2) B(_b1_,b2) C(_c1_,c2) R(a1,b1,c1,x) R keys: a1+b1, b1+c1  
c. A(_a1_,a2,b1,c1,x) B(_b1_,b2) C(_c1_,c2)  
$d. A(_a1_,a2) B(_b1_,b2) C(_c1_,c2) R(a1,b1,c1,x) R key: b1+c1  
e. None of the others is right  

?: Given this Entity-Relationship (A, B – aggregated R relationship), a valid mapping into tables of the diagram is:
[image9.png]
$a. A(_a1_,a2) B(_b1_,b2,a1)  
b. A(_a1_,a2) R(_a1,b1_,b2) Agr(_a1,b1_)  
c. A(_a1_,a2) B(_b1_,b2) R(_a1,b1_)  
d. A(_a1_,a2) B(_b1_,b2) Agr(_a1,b1_)  
e. None of the others is right  

?: Given F = { AB → D, B C → A, A C → B, C → D }  
a. { AB → B C, C → D }  
b. { A D → B, A C → B, C → D }  
c. { A D → B, B C → A, C → D }  
$d. F is already a canonical (minimal) cover  
e. None of the others is right  