?: Dada una integridad referencial, con una relación referenciada r1 con clave primaria K y una relación que referencia r2 con clave externa a
a. r1 tiene que estar en forma normal BCNF al menos
b. r1 y r2 deben ser relaciones compatibles para la diferencia
c. r2 debe ser una relación que provenga de una entidad débil del modelo E-R
$d. Ninguna de las otras es correcta
e. Siempre debe cumplirse ? (r1) O ? (r2)

?: Dados un F y un recubrimiento canónico de F, Fc, siempre se cumple [Nota: ==> implica lógicamente, =/=> no implica lógicamente]
a. F+ =/= Fc+
b. Ninguna de las otras es correcta
c. F == Fc
d. F =/=> Fc y Fc ==> F
$e. F ==> Fc y Fc ==> F

?: Dado R = (A, B, C, D) y F = { B --> C, BC --> DA, A --> B }
a. R NO está en BCNF ni en 3FN porque F no es un recubrimiento canónico
b. Ninguna de las otras es correcta
c. La forma normal más alta en que está R es 3NF
d. R NO está en 3NF
$e. La forma normal más alta en que está R es BCNF

?: En una descomposición de producto sin pérdida de R en R1 y R2, con r(R), r1(R1), r2(R2)
a. Es posible que R1 y R2 no tengan ningún atributo en común
b. R1 y R2 deben tener como mucho un atributo en común
c. Basta con que R1 y R2 tengan más de un atributo en común para que la descomposición sea de producto sin pérdida
d. Ninguna de las otras es correcta
$e. r1 |x| r2 NO puede tener más tuplas que r

?: La conservación de dependencias en una descomposición es deseable porque
a. La conservación reduce el grado de redundancia inicial
b. Si no se conservasen, la BD estaría en un estado inconsistente
c. Si no se conservasen, no se podría insertar nueva información en la BD
d. Nos garantiza que todas las relaciones de la descomposición estén en BCNF
$e. Ninguna de las otras es correcta

?: Dentro de los limitantes de integridad expresables en alguna versiones vistas del SQL
a. Ninguna de las otras es correcta
$b. Las claves candidato se indican con la cláusula UNIQUE
c. Las claves primarias se indican con la cláusula FOREIGN KEY
d. Los disparadores se indican con la sentencia CREATE ASSERTION
e. Las dependencias funcionales se indican con la cláusula FUNCTIONAL DEPENDENCY

?: Visto F = { BD --> CAE, CA --> B, B --> E }, puede afirmarse
$a. E es un atributo ajeno en BD --> CAE
b. A es un atributo ajeno en CA --> B
c. C es un atributo ajeno en BD --> CAE
d. A es un atributo ajeno en CA --> B
e. Ninguna de las otras es correcta

?: En SQL, una expresión equivalente a las que usan la operación de intersección en álgebra relacional
a. No puede expresarse en la práctica, pues CONTAINS no forma parte de ningún estándar de SQL
b. Necesita utilizar obligatoriamente el operador MINUS (EXCEPT) al menos
c. Tendría un tiempo de ejecución tan excesivo que no se puede usar en la práctica
d. Se puede crear fácilmente usando el operador FORALL
$e. Ninguna de las otras es correcta

?: El cierre X+ de un conjunto de atributos X contenido en R bajo un conjunto de dependencias F
a. Se calcula partiendo necesariamente de un recubrimiento canónico de F
b. Puede tener menos atributos que X
$c. Si X no tiene atributos primos, X+ no puede tener atributos primos
d. Es igual a R si todos los atributos de X son primos
e. Ninguna de las otras es correcta

?: En una integridad referencial con una relación referenciada r1 con clave primaria K y una relación que referencia r2 con clave externa alfa
$a. Una eliminación en r1 puede conllevar una eliminación en r2
b. Una eliminación en r2 puede conllevar una actualización en r1
c. Una inserción en r1 puede conllevar una inserción en r2
d. Una inserción en r2 puede conllevar una actualización en r1
e. Ninguna de las otras es correcta